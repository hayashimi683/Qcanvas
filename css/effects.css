/* ペンライトカーソル */
.penlight-cursor {
    width: 10px;
    height: 30px;
    background-color: #fff;
    position: fixed;
    pointer-events: none;
    z-index: 9999;
    border-radius: 5px;
    transition: background-color 0.3s;
}

.penlight-glow {
    width: 2px;
    height: 2px;
    position: fixed;
    pointer-events: none;
    z-index: 9998;
    transition: box-shadow 0.3s;
}

/* パララックス効果 */
.parallax {
    transition: transform 0.1s linear;
    will-change: transform;
}

/* 3Dフォトギャラリー */
.gallery-item {
    transition: transform 0.3s ease-out;
    will-change: transform;
    transform-style: preserve-3d;
}

.gallery-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 8px;
}

/* スタンプラリー */
.stamp-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 20px;
    padding: 20px;
}

.stamp-item {
    background: #f5f5f5;
    padding: 20px;
    border-radius: 8px;
    text-align: center;
    opacity: 0.5;
    transition: all 0.3s;
}

.stamp-item.collected {
    opacity: 1;
    background: #fff;
    box-shadow: 0 0 20px rgba(0,0,0,0.1);
}

/* メンバーカラーエフェクト */
body {
    transition: background 0.5s;
}

/* スマートフォン向けのメンバーカラー最適化 */
@media screen and (max-width: 768px) {
    body[data-member-color] {
        background-color: rgba(var(--member-color-rgb), 0.3) !important;
    }
    
    .main-content {
        background-color: rgba(255, 255, 255, 0.7);
        backdrop-filter: blur(5px);
        -webkit-backdrop-filter: blur(5px);
    }
}

/* Q&Aアコーディオン */
.qa-item {
    margin-bottom: 10px;
}

.qa-question {
    background: #f5f5f5;
    padding: 15px;
    border-radius: 8px;
    cursor: pointer;
    transition: background 0.3s;
}

.qa-question:hover {
    background: #e9e9e9;
}

.qa-answer {
    padding: 15px;
    display: none;
    background: white;
    border-radius: 0 0 8px 8px;
    margin-top: 2px;
}

.qa-answer.active {
    display: block;
    animation: slideDown 0.3s ease-out;
}

@keyframes slideDown {
    from {
        opacity: 0;
        transform: translateY(-10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
